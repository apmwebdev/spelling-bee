/*
  Super Spelling Bee - A vocabulary game with integrated hints
  Copyright (C) 2023 Austin Miller

  This program is free software: you can redistribute it and/or modify it under
  the terms of the GNU General Public License as published by the Free Software
  Foundation, either version 3 of the License, or (at your option) any later
  version.

  See the LICENSE file or https://www.gnu.org/licenses/ for more details.
*/

@use 'colors' as *;

* {
  box-sizing: border-box;
  &:focus {
    outline: none;
  }
}

:root {
  --border-radius: 6px;
}

body {
  color: var(--line-bright);
  background-color: var(--black);
  font-size: 16px;
}

#Root {
  width: 100%;
}

.App {
  --font-size: 16px;
  --large-font: calc(1.11111111 * var(--font-size));
  --small-font: calc(0.88888889 * var(--font-size));
  --smaller-font: calc(0.77777778 * var(--font-size));

  font-size: var(--font-size);
  text-align: center;
  display: flex;
  flex-direction: column;
  position: relative;
  &.App___threeColumns {
    --font-size: 18px;
  }
}

.PuzzleMainContainer {
  width: 100%;
  padding: 8px;
  .App___threeColumns & {
    padding: 12px;
  }
}

.PuzzleMain {
  display: grid;
  width: 100%;
  justify-items: center;
  .App___threeColumns & {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .App___twoColumns & {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    .PuzzleMain_section {
      padding: 0px 4px;
    }
  }
}

.PuzzleMain_section {
  width: 100%;
  max-width: 100%;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.PuzzleSectionTabs {
  & > .TabsContent[data-state="active"] {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--black);
  }
}

.SingleColumnTabs {
  width: 100%;
  max-width: calc(100vw - 16px);
  &.TabsRoot {
    border: none;
  }
  & > .TabsContent {
    padding: 8px 0px 0px;
  }
}

.NonPuzzleLayout {
  display: flex;
  width: 100%;
  justify-content: center;
  padding: 16px;
}

.NonPuzzleMain {
  width: clamp(600px, 60%, 1280px);
  background-color: var(--dark-gray-1);
  padding: 16px;
  border-radius: var(--border-radius);
  border: 1.5px solid var(--dark-gray-5);
}




/**********************/
/***   COMPONENTS   ***/
/**********************/




/***   Buttons   ***/

@mixin button-mixin($hue: $accent-hue) {
  @include button-colors($hue);
  display: grid;
  place-content: center;
  touch-action: manipulation;
  &:disabled {
    cursor: not-allowed;
  }
}

@mixin gray-button-mixin {
  display: grid;
  place-content: center;
  border: 1px solid var(--dark-gray-2);
  background-color: var(--dark-gray-2);
  &:hover {
    background-color: var(--dark-gray-1);
    border-color: var(--mid-gray-darker);
  }
  &:focus {
    box-shadow: 0 0 0 1px var(--mid-gray-darker);
  }
}

button {
  border-radius: var(--border-radius);
}

.standardButton {
  @include button-mixin;
  font-size: var(--small-font);
  padding: 8px 16px;
}

.IconButton {
  @include button-mixin;
  font-size: 20px;
  padding: 4px 12px;
  &.IconButton_Square {
    padding: 6px;
  }
  &.IconButton_Small {
    font-size: 16px;
    padding: 3px;
  }
  &.CloseButton {
    padding: 4px;
  }
}

.IconButton-group {
  display: grid;
  gap: 8px;
  &.group-2 {
    grid-template-columns: 1fr 1fr;
  }
  &.group-3 {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

/***   Checkbox   ***/

.CheckboxRoot {
  @include basic-hover;
  @include basic-focus;
  color: var(--line-bright);
  display: flex;
  justify-content: center;
  align-items: center;
  width: 1.5em;
  min-width: 1.5em;
  height: 1.5em;
  min-height: 1.5em;
  //padding: 8px;
  border-radius: var(--border-radius);
  border: 1.5px solid border-color-dark($accent-hue);
  background-color: bg-color-darker($accent-hue);
  &[data-disabled] {
    border-color: border-color-dark-disabled($accent-hue);
    background-color: bg-color-dark-disabled($accent-hue);
    cursor: not-allowed;
  }
}

/***   Collapsible   ***/

.CollapsibleTitleTrigger {
  padding: 8px 24px;
  border: 1.5px solid transparent;
  background-color: inherit;
  &:hover {
    background-color: var(--dark-gray-1);
    border-color: var(--mid-gray-darker);
  }
  &:focus {
    box-shadow: 0 0 0 1px var(--mid-gray-darker);
  }
}

/***   Dialog   ***/

.DialogOverlay {
  position: fixed;
  z-index: 2;
  inset: 0px;
  background-color: hsl(0 0% 5% / 0.9);
}

.DialogContent {
  position: fixed;
  z-index: 2;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 16px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  border-radius: var(--border-radius);
  background-color: var(--dark-gray-2);
  border: 2px solid var(--dark-gray-5);
}

.DialogClose {
  @include gray-button-mixin;
  position: absolute;
  top: 12px;
  right: 12px;
}

.DialogTitle {
  text-align: center;
  font-size: calc(1.33333333 * var(--font-size));
}

/***   Dropdown Menu   ***/

.DropdownMenuArrow {
  fill: var(--dark-gray-4);
}

.DropdownMenuContent {
  background-color: var(--dark-gray-4);
  z-index: 2;
  padding: 4px 0px 2px;
  border-radius: var(--border-radius);
  font-size: var(--small-font);
}

.DropdownMenuItem {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 6px 12px;
  cursor: pointer;
  &:hover {
    background-color: highlight-color-dark($accent-hue);
  }
}

.DropdownMenuItem_icon {
  font-size: 1.2em;
}

.DropdownMenuLabel {
  @extend .DropdownMenuItem;
  cursor: default;
  &:hover {
    background-color: inherit;
  }
}

.DropdownMenuSeparator {
  height: 1px;
  margin: 4px 0px;
  background-color: var(--light-gray);
}

.DropdownMenuTrigger {
  @include basic-focus-gray;
  font-size: var(--small-font);
  display: flex;
  align-items: center;
  padding: 8px;
  gap: 8px;
  border: 1.5px solid var(--mid-gray-darker);
  background-color: var(--dark-gray-3);
  &:hover {
    background-color: var(--dark-gray-2);
  }
  &[data-state="open"] {
    background-color: var(--dark-gray-1);
    border-color: var(--mid-gray);
  }
}

.DropdownMenuTrigger___withChevron {
  padding: 8px 16px 8px 8px;
}

/***   Help Bubble   ***/

.HelpBubbleTrigger {
  @include basic-focus;
  color: var(--text-main);
  height: 1.2em;
  min-height: 1.2em;
  width: 1.2em;
  min-width: 1.2em;
  border-radius: 1.2em;
  border: 1px solid;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2px;
  background-color: inherit;
}

/***   Horizontal Scroll Container   ***/

.HorizontalScrollContainer_outer {
  display: flex;
  flex-direction: column;
  overflow-x: auto;
}

.HorizontalScrollContainer_inner {
  display: flex;
  justify-content: center;
  min-width: max-content;
}

/***   HR   ***/

.Hr {
  width: 100%;
  border: none;
  border-top: 2px solid var(--dark-gray-5);
}

/***   Input   ***/

input[type="text"],
input[type="search"],
input[type="password"],
input[type="email"]
{
  $this-hue: $accent-hue;
  width: 25ch;
  padding: 4px 8px;
  color: var(--line-mid);
  border-radius: var(--border-radius);
  border: 1.5px solid border-color-dark($this-hue);
  background-color: bg-color-darker($this-hue);
  font-size: var(--smaller-font);
  &::placeholder {
    font-style: italic;
    color: var(--text-disabled);
  }
  &:hover {
    border-color: border-color-dark-hover($this-hue);
  }
  &:focus {
    background-color: bg-color-darkest($this-hue);
  }
  &.TextInput___invalid {
    background-color: bg-color-darker($error-hue);
    border-color: border-color-dark($error-hue);
    &:hover {
      border-color: border-color-dark-hover($error-hue);
    }
    &:focus {
      background-color: bg-color-darkest($error-hue);
    }
  }
}

input[type="email"] {
  width: 30ch;
}

input[type="number"] {
  @include basic-hover;
  @include basic-focus;
  color: var(--line-bright);
  background-color: bg-color-darker($accent-hue);
  border-radius: var(--border-radius);
  font-size: var(--smaller-font);
  padding: 4px 8px;
  border: 1.5px solid border-color-dark($accent-hue);
  &:hover {
    border-color: border-color-dark-hover($accent-hue);
  }
  &[disabled] {
    color: var(--text-disabled);
    background-color: var(--dark-gray-3);
    border-color: border-color-dark-disabled($accent-hue);
    cursor: not-allowed;
  }
}

.NumberInput {
  display: flex;
}

input.NumberInput_input {
  font-size: var(--smaller-font);
  appearance: textfield;
  text-align: center;
  border-radius: 0;
  width: 3em;
  max-width: 3em;
  padding: 6px 8px;
  position: relative;
  &:focus, &:hover {
    z-index: 1;
  }
}

.NumberInput_button {
  @include button-mixin;
  font-size: var(--smaller-font);
  font-weight: bold;
  padding: 6px 8px;
  position: relative;
  &:focus, &:hover {
    z-index: 1;
  }
}

.NumberInput_incrementButton {
  left: -1.5px;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.NumberInput_decrementButton {
  right: -1.5px;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

/***   Links   ***/

a {
  $this-hue: $yellow-hue;
  text-decoration: underline;
  color: var(--yellow-line);
  border-radius: var(--border-radius);
  &:hover {
    color: ui-line-color-hover-dark($this-hue);
  }
  &:focus {
    box-shadow: 0 0 0 3px shadow-color-focus($accent-hue);
  }
}

a.ButtonLink, div.ButtonLink {
  $this-hue: $yellow-hue;
  border-radius: var(--border-radius);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 12px;
  .App___threeColumns & {
    padding: 6px 16px;
  }
  gap: 4px;
  border: 1.5px solid var(--yellow-line);
  &:hover {
    color: ui-line-color-hover-dark($this-hue);
    border-color: ui-line-color-hover-dark($this-hue);
  }
  &:focus {
    box-shadow: 0px 0px 0px 3px shadow-color-focus($this-hue);
  }
  &.disabled {
    color: border-color-dark-disabled($this-hue);
    border-color: border-color-dark-disabled($this-hue);
  }
  span {
    font-size: 14px;
  }
}

/***   Popover   ***/

.PopoverContent {
  position: relative;
  z-index: 3;
  display: flex;
  align-items: flex-start;
  gap: 8px;
  padding: 8px 12px 12px 12px;
  max-width: var(--radix-popover-content-available-width);
  border-radius: var(--border-radius);
  border: 2px solid var(--light-gray);
  background-color: var(--mid-gray);
  &:focus {
    outline: none;
  }
  span {
    align-self: center;
    display: flex;
    align-items: center;
  }
}

.PopoverCloseButton {
  align-self: flex-start;
  margin-top: 4px;
  padding: 3px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid var(--light-gray);
}

.PopoverArrow {
  z-index: 1;
  fill: var(--light-gray);
}

/***   Select   ***/

.SelectTrigger {
  @include basic-hover;
  @include basic-focus;
  width: 9em;
  font-size: var(--small-font);
  border: 1.5px solid border-color-dark($accent-hue);
  background-color: bg-color-darker($accent-hue);
  padding: 6px 12px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  line-height: 1.2;
  &.SmallSelect {
    font-size: var(--smaller-font);
    padding: 4px 8px;
    width: 11em;
    gap: 6px;
  }
  span {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
  }
}

.SelectIcon {
  width: 1em;
  height: 1em;
}

.SelectContent {
  z-index: 2;
  border-radius: var(--border-radius);
  overflow: hidden;
  font-size: var(--small-font);
  padding: 3px 0px;
  border: 1.5px solid border-color-dark($accent-hue);
  background-color: bg-color-darker($accent-hue);
  &:hover {
    border-color: border-color-dark-hover($accent-hue);
  }
  &.SmallSelect {
    font-size: var(--smaller-font);
    padding: 2px 0px;
  }
}

.SelectLabel {
  font-size: calc(0.9375 * var(--small-font));
  padding: 6px 16px;
  font-style: italic;
  color: var(--text-disabled);
  border-color: var(--line-disabled);
  .SmallSelect & {
    padding: 4px 12px;
  }
}

.SelectItem {
  position: relative;
  cursor: pointer;
  padding: 6px 6px 6px 28px;
  user-select: none;
  &[data-highlighted] {
    background-color: highlight-color-dark($accent-hue);
  }
  .SmallSelect & {
    padding: 5px 5px 5px 24px;
  }
}

.SelectItemIndicator {
  position: absolute;
  left: 6px;
  .SmallSelect & {
    left: 4px;
  }
}

.SelectScrollButton {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  height: 24px;
  background-color: bg-color-darkest($accent-hue);
  &.up {
    border-bottom: 1.5px solid border-color-dark($accent-hue);
  }
  &.down {
    border-top: 1.5px solid border-color-dark($accent-hue);
  }
}

/*** Scroll Area ***/

.ScrollAreaScrollbar {
  display: flex;
  user-select: none;
  touch-action: none;
  padding: 2px;
  background: #333;
  border-radius: 12px;
  &[data-orientation='horizontal'] {
    flex-direction: column;
    height: 12px;
  }
}

.ScrollAreaThumb {
  flex: 1;
  background: #666;
  border-radius: 12px;
  position: relative;
  &:before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    min-width: 44px;
    min-height: 44px;
  }
}

/***   Settings Collapsible   ***/

.SettingsCollapsible {
  font-size: var(--small-font);
  border-radius: var(--border-radius);
  background-color: var(--dark-gray-2);
  border: 1.5px solid transparent;
  overflow: hidden;
  span.disabled {
    color: var(--text-disabled-dark);
  }
  &[data-state="open"] {
    border-color: var(--dark-gray-5);
  }
  &[data-state="closed"] {
    color: var(--line-mid);
    background-color: transparent;
    border: 1.5px solid transparent;
  }
}

/***   Switch   ***/

.SwitchRoot {
  @include basic-hover;
  @include basic-focus;
  display: block;
  position: relative;
  border-radius: 9999px;
  width: 42px;
  height: 25px;
  border: 1.5px solid border-color-dark($accent-hue);
  background-color: bg-color-darker($accent-hue);
  &[data-state='checked'] {
    background-color: highlight-color-dark($accent-hue);
    border-color: border-color-dark-hover($accent-hue);
  }
  &[data-disabled] {
    background-color: bg-color-dark-disabled($accent-hue);
    border-color: border-color-dark-disabled($accent-hue);
    cursor: not-allowed;
  }
}

.SwitchThumb {
  display: block;
  position: relative;
  border-radius: 9999px;
  height: 18px;
  width: 18px;
  transform: translateX(-2px);
  background-color: var(--line-bright);
  &[data-state='checked'] {
    transform: translateX(15px);
  }
  &[data-disabled] {
    background-color: var(--line-disabled);
  }
}

/***   Tabs   ***/

.TabsRoot {
  border-radius: var(--border-radius);
  overflow: hidden;
  border: 1.5px solid var(--dark-gray-5);
  width: 100%;
  align-self: stretch;
}

.TabsList {
  display: grid;
  background-color: var(--dark-gray-2);
}

.TabsTrigger {
  $this-hue: $accent-hue;
  padding: 8px 8px 10px 8px;
  border-radius: 0;
  border: none;
  border-bottom: 1px solid var(--dark-gray-5);
  color: var(--text-secondary);
  &:hover {
    background-color: var(--dark-gray-1);
    padding-bottom: 8px;
    border-bottom: 3px solid var(--dark-gray-5);
  }
  &[data-state="active"] {
    color: var(--text-main);
    background-color: bg-color-dark-hover($this-hue);
    padding-bottom: 8px;
    border-bottom: 3px solid highlight-color-dark($this-hue);
  }
}
.TabsContent {
  padding: 8px;
  background-color: var(--dark-gray-1);
}

/***   Toggle   ***/

.ToggleRoot {
  &[data-disabled] {
    cursor: not-allowed;
  }
}

/***   Toggle Group   ***/

.ToggleGroupRoot {
  $this-hue: $accent-hue;
  border-radius: var(--border-radius);
  border: 1.5px solid border-color-dark($this-hue);
  overflow: hidden;
  display: flex;
  gap: 1.5px;
  background-color: border-color-dark($this-hue);
}

.ToggleGroupItem {
  $this-hue: $accent-hue;
  //--bg-color: #{$dark-gray-2};
  --bg-color: #{bg-color-dark-inactive($this-hue)};
  border-radius: 0;
  padding: 4px 12px;
  background-color: var(--bg-color);
  border: 1.5px solid var(--bg-color);
  color: var(--text-secondary);
  &:hover {
    border-color: border-color-dark-hover($this-hue);
  }
  &:focus {
    --bg-color: #{bg-color-dark($this-hue)};
    border-color: border-color-dark-hover($this-hue);
    box-shadow: button-inset-shadow(inset-shadow-color-inactive($this-hue));
  }
  &[data-state="on"] {
    --bg-color: #{bg-color-dark-hover($this-hue)};
    color: var(--text-highlight);
    box-shadow: button-inset-shadow(inset-shadow-color($this-hue));
    border-color: inset-shadow-color($this-hue);
    &:hover {
      border-color: border-color-dark-hover($this-hue);
      box-shadow: button-inset-shadow(inset-shadow-color-hover($this-hue));
    }
    &:focus {
      --bg-color: #{bg-color-darker($this-hue)};
      border-color: border-color-dark-hover($this-hue);
      box-shadow: button-inset-shadow(inset-shadow-color-focus($this-hue));
    }
  }
  &:first-child {
    border-top-left-radius: var(--border-radius);
    border-bottom-left-radius: var(--border-radius);
  }
  &:last-child {
    border-top-right-radius: var(--border-radius);
    border-bottom-right-radius: var(--border-radius);
  }
}

/***   Tooltip   ***/

.TooltipContent {
  display: flex;
  align-items: center;
  border-radius: var(--border-radius);
  font-size: var(--smaller-font);
  background-color: var(--light-gray-bg);
  color: var(--dark-gray-1);
  padding: 6px 12px;
  z-index: 3;
}

.TooltipArrow {
  fill: var(--light-gray-bg);
}




/*****************/
/***   OTHER   ***/
/*****************/




.spacer {
  height: var(--font-size);
}
