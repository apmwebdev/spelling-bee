/*
  Super Spelling Bee - A vocabulary game with integrated hints
  Copyright (C) 2023 Austin Miller

  This program is free software: you can redistribute it and/or modify it under
  the terms of the GNU General Public License as published by the Free Software
  Foundation, either version 3 of the License, or (at your option) any later
  version.

  See the LICENSE file or https://www.gnu.org/licenses/ for more details.
*/

@use 'colors' as *;

:root {
  /*
  Word Length Grid ("WLG") Column Width
  Set widths of all columns except for left-most column.
  The purpose of this is twofold:
  1. Make all columns the same width, regardless of what combination of
     single-digit and double-digit numbers they contain. Columns of different
     widths looks sloppy.
  2. Make it so that columns do not resize when going from a single-digit number
     to a double-digit number (or vice-versa) for a Remaining or Found value.
     Resizing columns is distracting (and still sloppy).
  56px is the narrowest that columns can be with Roboto Mono at 15.5 px, 4px of
  horizontal padding, and a left border, while making sure that cells can contain
  two double-digit numbers and not need to widen.
  The leftmost column does not need a set width because it is just headers, and,
  therefore, will not need to resize.
  */
  --wlg-col-width: 56px
}

//See above for width. Setting the box sizing as content-box
@mixin hint-cell {
  box-sizing: content-box;
  width: 47px;
  font-family: "Roboto Mono", monospace;
  font-size: 15.5px;
  padding: 6px 4px;
}

@mixin hint-settings-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  .App___oneColumn & {
    grid-template-columns: 1fr;
  }
  justify-content: stretch;
  gap: 8px;
}




/******************/
/***   SHARED   ***/
/******************/




.HintProfiles {
  display: flex;
  gap: 16px;
  align-items: center;
  .SelectTrigger {
    width: 16em;
  }
}

.HintPanels {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.HintPanel {
  position: relative;
  border-radius: var(--border-radius);
  border: 1.5px solid var(--dark-gray-5);
  overflow: hidden;
  background-color: var(--dark-gray-1);
  &[data-state="closed"] {
    color: var(--line-mid);
    border-color: var(--dark-gray-5);
  }
  &.Dragging {
    opacity: 20%;
  }
  &.Overlay {
    opacity: 80%;
    outline: 3px dotted;
  }
  &.Sorting {
    border-color: var(--mid-gray-lighter);
  }
}

.HintPanelHeader {
  align-self: stretch;
  display: grid;
  grid-template-columns: max-content 1fr max-content;
  align-items: center;
  gap: 6px;
  padding: 3px 4px;
  background-color: var(--dark-gray-2);
  border-bottom: 1px solid var(--dark-gray-5);
  .HintPanel[data-state="closed"] & {
    border-bottom-color: transparent;
  }
}

.PanelHeaderButtonGroup {
  display: flex;
  gap: 6px;
}

button.HintPanelHeaderButton {
  font-size: var(--font-size);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  padding: 8px;
  border: 1px solid var(--dark-gray-2);
  background-color: var(--dark-gray-2);
  &.IconButton {
    font-size: calc(1.11111111 * var(--font-size));
  }
  &:hover {
    background-color: var(--dark-gray-1);
    border-color: var(--mid-gray-darker);
  }
  &:focus {
    box-shadow: 0 0 0 1px var(--mid-gray-darker);
  }
  .HintPanel[data-state="closed"] & {
    color: var(--line-mid);
    background-color: inherit;
    border-color: var(--dark-gray-2);
    &:hover {
      background-color: var(--dark-gray-1);
      border-color: var(--mid-gray-darker);
    }
  }
}

button.IconButton.DragHandle {
  cursor: move;
  .HintPanel.Overlay & {
    background-color: var(--line-bright);
    color: var(--dark-gray-2);
  }
}

button.SettingsToggle {
  $this-hue: $accent-hue;
  padding: 8px;
  color: var(--line-bright);
  &[data-state="on"] {
    background-color: var(--line-mid);
    border-color: transparent;
    color: var(--dark-gray-2);
    &:hover {
      background-color: var(--line-bright);
    }
    .HintPanel[data-state="closed"] & {
      background-color: var(--line-mid);
      color: var(--dark-gray-2);
    }
  }
}

.HeaderDisclosureWidget {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.SettingsCollapsibleHeader {
  padding: 2px;
  background-color: var(--dark-gray-3);
  border-bottom: 1px solid var(--dark-gray-5);
  button {
    border: 1.5px solid transparent;
    &.button {
      background-color: var(--dark-gray-3);
    }
    &:hover {
      border-color: var(--dark-gray-5);
      background-color: var(--dark-gray-2);
      //border-color: transparent;
    }
  }
  .SettingsCollapsible[data-state="closed"] & {
    border-bottom-color: transparent;
  }
}
.SettingsCollapsibleHeaderButton {
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-weight: bold;
  padding: 4px;
}

.HintPanelSettings {
  border: 1.5px solid var(--dark-gray-5);
  margin-bottom: 8px;
  padding: 16px;
}

.HintPanelSettingsHeader {
  padding: 6px;
  font-weight: bold;
}

.HeaderDisclosureWidgetIcon {
  position: absolute;
  justify-self: flex-start;
  left: -18px;
}

.GeneralPanelSettings {
  border-top: 2px solid var(--dark-gray-5);
  align-items: center;
  padding: 8px;
  @include hint-settings-grid;
}

.GeneralPanelSettingsStatusTracking, .PanelNameInputForm {
  display: flex;
  justify-content: space-between;
  gap: 8px;
  align-items: center;
}

.PanelInitialDisplayControlsContainer {
  display: grid;
  grid-column: 1 / 3;
  align-items: center;
  justify-content: stretch;
  gap: 12px;
  border-top: 1px solid var(--dark-gray-5);
  padding-top: 8px;
  .App___oneColumn & {
    grid-column: 1 / 2;
  }
}

.PanelInitialDisplayControls {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  align-items: flex-start;
  justify-content: stretch;
  gap: 12px;
  .App___oneColumn & {
    grid-template-columns: repeat(3, 1fr);
  }
}

.PanelInitDisplayControl label {
  display: flex;
  flex-direction: column;
  gap: 6px;
  align-items: center;
  justify-content: center;
  .CheckboxRoot[data-disabled] + div {
    span {
      color: var(--text-disabled);
    }
  }
}

.PanelInitDisplayControlInfo {
  display: flex;
  align-items: center;
  gap: 4px;
}

.HintLettersOffsetControl {
  &.disabled {
    color: var(--text-disabled);
  }
}

.PanelSettings input[type="number"],
.HintOffsetInput,
.LetterPanelNumberOfLettersInput,
.HintRevealedLettersInput,
{
  width: calc(3.5 * var(--font-size));
}

.HintPanelContent {
  padding: 8px;
}

.HintPanelContentContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
}

.HintPanelQuickActions {
  position: relative;
  z-index: 2;
  width: 100%;
  align-self: flex-start;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-bottom: 8px;
  > div {
    display: flex;
    align-items: center;
    gap: 8px;
  }
  .App___oneColumn & {
    align-items: flex-start;
    > div {
      display: grid;
    }
  }
  > div.HintPanelQuickActions_buttons {
    display: flex;
  }
}


.HintContentBlur {
  position: absolute;
  z-index: 1;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--dark-gray-4);
  border-radius: var(--border-radius);
}

.PanelSettings {
  padding: 8px;
  @include hint-settings-grid;
  > div {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
}




/************************/
/***   LETTER PANEL   ***/
/************************/




.LetterPanelNumberOfLettersInput {
  width: calc(3 * var(--font-size));
}

.LetterHintPanel {
  padding: 8px 0px;
}

.LetterPanel_WLG_Container,
.LetterPanel_WCL_Container {
  display: flex;
  flex-direction: column;
  align-items: center;
  //margin-top: 8px;
}

.LetterPanel_WLG_Key {
  font-size: var(--small-font);
  display: flex;
  gap: 4px;
  align-items: center;
  justify-content: start;
  //align-self: flex-start;
  padding: 4px;
  div {
    display: flex;
    align-items: center;
    gap: 8px;
  }
}

.LetterPanel_WLG_TrackingKey {
  padding: 2px 8px;
  background-color: var(--dark-gray-2);
  border: 1px solid var(--line-darkest);
}

.LetterPanel_WordLengthGrid {
  margin: 8px 0px;
  td, th:not(.LetterPanel_WLG_AxisLabel):not(.LetterPanel_WLG_RowHeader) {
    @include hint-cell;
    border-left: 1px solid transparent;
  }
  th.LetterPanel_WLG_RowHeader {
    font-family: "Roboto Mono", monospace;
    font-size: 15.5px;
  }
  th.LetterPanel_WLG_AxisLabel {
    padding: 4px 0px;
  }
  .LetterPanel_WLG_Content,
  .LetterPanel_WLG_TotalColumn,
  .LetterPanel_WLG_TotalRow,
  {
    border-left: 1px solid var(--line-darkest);
  }

}

//For some reason, this is necessary for column widths to be consistent
.LetterPanel_WLG_TdCol, .LetterPanel_WLG_TotalCol {
  width: var(--wlg-col-width);
}

.LetterPanel_WLG_Content,
.LetterPanel_WLG_TotalColumn,
.LetterPanel_WLG_RowHeader,
.LetterPanel_WLG_TotalRow,
{
  border-top: 1px solid var(--line-darkest);
}

.LetterPanel_WLG_ContentFull {
  background-color: var(--dark-gray-2);
}

.LetterPanel_WordCountList,
.LetterPanel_LettersPresentList {
  display: flex;
  flex-direction: column;
  align-items: center;
  //gap: 8px;
  padding: 12px 8px;
  margin-top: 4px;
}

.LetterPanel_WordCountList {
  border-top: 1px dotted;
  font-family: "Roboto Mono", monospace;
  font-size: 15.5px;
}

.LetterPanel_WCL_Row {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  flex-wrap: wrap;
  align-items: center;
  column-gap: 16px;
  row-gap: 8px;
  padding: 8px;
}

.LetterPanel_WCL_Cell {
  display: flex;
  align-items: center;
  gap: 8px;
}

.LetterPanel_WCL_CellCount {
  @include hint-cell;
  border: 1px solid var(--line-darkest);
  background-color: var(--dark-gray-2);
}

.LetterPanel_LPL_Row {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  column-gap: 16px;
  row-gap: 8px;
  padding: 8px;
  border-bottom: 1px solid var(--line-darkest);
}




/************************/
/***   SEARCH PANEL   ***/
/************************/




.SearchHintPanel {
  form {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 8px;
    margin-bottom: 8px;
  }
}

.SearchPanelSettings {
  .HintPanelLocationControl {
    grid-row: 2 / 3;
    grid-column: 1 / 2;
    .App___oneColumn & {
      grid-row: auto;
      grid-column: auto;
    }
  }
  .HintLettersOffsetControl {
    grid-row: 2 / 3;
    grid-column: 2 / 3;
    .App___oneColumn & {
      grid-row: auto;
      grid-column: auto;
    }
  }
}

.SearchPanelResults {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.SearchPanelResult {
  border-radius: var(--border-radius);
  position: relative;
  overflow: hidden;
  border: 1.5px solid var(--dark-gray-5);
  background-color: var(--dark-gray-2);
}

.SearchHintSearchResultHeader {
  height: 31px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2px;
  background-color: var(--dark-gray-3);
  border-bottom: 1px solid var(--dark-gray-5);
}

.IconButton.SearchResultHeaderRemoveButton {
  position: absolute;
  right: 2px;
  top: 2px;
  padding: 4px;
  font-size: 16px;
  background-color: var(--dark-gray-3);
  border-color: var(--dark-gray-3);
  &:hover {
    border-color: var(--dark-gray-5);
    background-color: var(--dark-gray-1);
  }
  &:focus {
    box-shadow: 0 0 0 1.5px var(--dark-gray-5);
  }
}

.SearchPanelResultKeyContainer {
  padding: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.SearchPanelResultKey {
  font-size: var(--small-font);
  display: grid;
  grid-template-columns: repeat(4, max-content);
  justify-content: center;
  align-items: center;
  gap: 1px;
  //padding: 1.5px;
  border-radius: var(--border-radius);
  overflow: hidden;
  border: 1px solid var(--mid-gray);
  background-color: var(--mid-gray);
}

.SearchPanelResultKeyItem {
  background-color: var(--dark-gray-3);
  header {
    padding: 6px 8px;
    background-color: var(--dark-gray-4);
    border-bottom: 1px solid var(--mid-gray);
  }
  > div {
    padding: 6px 8px;
  }
}

.SearchPanelResultContent {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 6px 0px;
  font-size: var(--small-font);
  margin-bottom: 8px;
}

.SearchHintResult_WordLengthGrid {
  td, th:not(.RowHeader) {
    @include hint-cell;
  }
  td {
    border: 1px solid var(--mid-gray);
    &.HasContent {
      background-color: var(--dark-gray-1);
    }
    &:last-child {
      border-right-color: transparent;
      background-color: var(--dark-gray-1);
    }
  }
  th {
    border-bottom: 1px solid var(--mid-gray-lighter);
    background-color: var(--dark-gray-2);
  }
}

//Need to set width here or else it is inconsistent
.SearchHintResult_WLG_TdCol, .SearchHintResult_WLG_TotalCol {
  width: 57px;
}

.SearchResultWordCount, .SearchResultLettersList {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
}

.SearchHintResult_WC_Result {
  font-family: "Roboto Mono", monospace;
  font-size: 15.5px;
}




/***************************/
/***   OBSCURITY PANEL   ***/
/***************************/




.ObscurityHintPanel {
  display: flex;
  align-items: center;
  justify-content: center;
}

.ObscurityPanelTable {
  th, td {
    text-align: left;
    border: 1px solid var(--mid-gray);
  }
  td {
    padding: 6px 12px;
  }
  th {
    font-weight: bold;
    padding: 8px 12px;
  }
  thead {
    background-color: var(--dark-gray-2);
  }
}

.DefinitionPopoverTrigger {
  text-align: left;
  text-decoration: underline;
  padding: 0px;
  //cursor: help;
  tr.ErrorText & {
    @extend .ErrorText
  }
}




/****************************/
/***   DEFINITION PANEL   ***/
/****************************/




.DefinitionPanelTabs {
  .TabsContent {
    text-align: left;
  }
}

.DefinitionPanelWord {
  padding: 12px 0px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.DefinitionPanelTerm {
  font-weight: bold;
  text-decoration: underline;
}
